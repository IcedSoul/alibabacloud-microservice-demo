apiVersion: apps/v1
kind: Deployment
metadata:
  name: productservice
spec:
  selector:
    matchLabels:
      app: productservice
  template:
    metadata:
      annotations:
        armsPilotAutoEnable: "on"
        armsPilotCreateAppName: "productservice"
      labels:
        app: productservice
        version: 1.0.0-SNAPSHOT
    spec:
      containers:
        - name: productservice
          image: registry.cn-beijing.aliyuncs.com/xfguo/test/productservice:1.0.0-SNAPSHOT
          imagePullPolicy: Always
          env:
            - name: spring.datasource.url
              value: "jdbc:mysql://47.93.7.209:3306/product?characterEncoding=utf8&useSSL=false"
            - name: spring.datasource.username
              value: root
            - name: spring.datasource.password
              value: "gIL0HMRHIG7PV0kfH1"
            - name: dubbo.registry.address
              value: "nacos://nacos:8848"
            - name: spring.cloud.nacos.discovery.server-addr
              value: "nacos:8848"
            - name: spring.cloud.nacos.config.server-addr
              value: "nacos:8848"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: cartservice
spec:
  selector:
    matchLabels:
      app: cartservice
  template:
    metadata:
      annotations:
        armsPilotAutoEnable: "on"
        armsPilotCreateAppName: "cartservice"
      labels:
        app: cartservice
    spec:
      containers:
        - name: cartservice
          image: registry.cn-beijing.aliyuncs.com/xfguo/test/cartservice:1.0.0-SNAPSHOT
          env:
            - name: spring.redis.host
              value: "r-2zevovzbjwda43bkin.redis.rds.aliyuncs.com"
            - name: spring.redis.password
              value: "gIL0HMRHIG7PV0kfH1"
            - name: dubbo.registry.address
              value: "nacos://nacos:8848"
            - name: spring.cloud.nacos.discovery.server-addr
              value: "nacos:8848"
            - name: spring.cloud.nacos.config.server-addr
              value: "nacos:8848"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: checkoutservice
spec:
  selector:
    matchLabels:
      app: checkoutservice
  template:
    metadata:
      annotations:
        armsPilotAutoEnable: "on"
        armsPilotCreateAppName: "checkoutservice"
      labels:
        app: checkoutservice
    spec:
      containers:
        - name: checkoutservice
          image: registry.cn-beijing.aliyuncs.com/xfguo/test/checkoutservice:1.0.0-SNAPSHOT
          env:
            - name: spring.datasource.url
              value: "jdbc:mysql://47.93.7.209:3306/checkout?characterEncoding=utf8&useSSL=false"
            - name: spring.datasource.username
              value: root
            - name: spring.datasource.password
              value: "gIL0HMRHIG7PV0kfH1"
            - name: dubbo.registry.address
              value: "nacos://nacos:8848"
            - name: spring.cloud.nacos.discovery.server-addr
              value: "nacos:8848"
            - name: spring.cloud.nacos.config.server-addr
              value: "nacos:8848"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      annotations:
        armsPilotAutoEnable: "on"
        armsPilotCreateAppName: "frontend"
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: registry.cn-beijing.aliyuncs.com/xfguo/test/frontend:1.0.0-SNAPSHOT
          ports:
            - containerPort: 8080
          env:
            - name: dubbo.registry.address
              value: "nacos://nacos:8848"
            - name: spring.cloud.nacos.discovery.server-addr
              value: "nacos:8848"
            - name: spring.cloud.nacos.config.server-addr
              value: "nacos:8848"
          # resources:
          #   requests:
          #     cpu: 100m
          #     memory: 64Mi
          #   limits:
          #     cpu: 200m
          #     memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  type: ClusterIP
  selector:
    app: frontend
  ports:
    - name: http
      port: 8080
      targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-external
spec:
  type: LoadBalancer
  selector:
    app: frontend
  ports:
    - name: http
      port: 8080
      targetPort: 8080